<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Randomized Algorithm on Stay hungry. Stay foolish </title>
    <link>https://sunprinces.github.io/learning/tags/randomized-algorithm/</link>
    <description>Recent content in Randomized Algorithm on Stay hungry. Stay foolish </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Fri, 18 Aug 2017 21:19:19 +0200</lastBuildDate>
    
	<atom:link href="https://sunprinces.github.io/learning/tags/randomized-algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Advanced Algorithm - Weighted Set Cover</title>
      <link>https://sunprinces.github.io/learning/2017/08/advanced-algorithm---weighted-set-cover/</link>
      <pubDate>Fri, 18 Aug 2017 21:19:19 +0200</pubDate>
      
      <guid>https://sunprinces.github.io/learning/2017/08/advanced-algorithm---weighted-set-cover/</guid>
      <description>呈前一講，我們對有限制的 WSC 問題有 $l$-approx. algorithm，但可能並不是太好(比方說 $l=|U|$ 之類)，於是我們嘗試引進一些隨機性，雖然犧牲了 deterministic 的 approx. ratio ，有時候甚至會得到更爛的結果(甚至不滿足 constraint @@)，但可以證明在大部分時候，都可以得到一個還不錯 (approx. ratio ISN&amp;rsquo;T too bad)的結果。
Weighted Set Cover Problem 讓我們明確定義這個問題
Given $U = \lbrace e_1,e_2,\cdots,e_n \rbrace, \, S_1,S_2,\cdots S_k \subseteq U \, \text{with} \, \text{cost}\,(S_i)$
Want: Find a min-cost collection of subsets $C$ such that $\underset{C}{\bigcup} S_i = U$
Formulation Let $x_i = $𝟙[subset $S_i$ is chosen or not]
 \[ \min \sum_i x_i \quad s.</description>
    </item>
    
  </channel>
</rss>